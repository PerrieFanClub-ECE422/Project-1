Autoscaling Algorithm Pseudo-code:

-------------------------------------------------
While True:

    While an interval of 20 seconds are elapsing :
        Total response time = 0
        Number of samples = 0
        Get response time from server
        Add response time to a total response time variable
        Increment number of samples
    
    If the number of samples obtained is nonzero:
        Calculate average response time by dividing total response time by number of samples

        If average response time > 3 seconds:
            Scale service out by 2x
            Wait until containers reach expected value

        If average response time < 2 seconds:
            Scale service in by 0.5x
            Wait until containers reach expected value

-------------------------------------------------

Reasonings behind parameter settings:
- A 20 second monitor interval was chosen because it can take some time for the containers to become stable
and we wanted to reduce oscillation to the greatest degree. We want to ensure that we are getting
sufficient average response time data before deciding if we need to perform any scaling on our application.

- An upper response time threshold of 3 seconds and a lower threshold of 2 seconds was chosen mostly through
trial and error and observing the average response time of a server under medium load. When the average response
time is greater than 3 seconds then that's usually a sign that we might need more containers, whereas if the response 
time is less than 2 seconds then that is a sign that resources may be wasted and we should scale in.

- The scaling factors of 2x and 0.5x were also chosen through trial and error. We chose these scaling factors
because we wanted to keep it simple and we found that we obtained good visualization results with these scaling factors.


